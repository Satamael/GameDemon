#include "TXLib.h"
#include "Chars.cpp"
#include "Ñonstants.cpp"

int main()
{
    int screenW = GetSystemMetrics(SM_CXSCREEN);
    int screenH = GetSystemMetrics(SM_CYSCREEN);
    txCreateWindow(screenW, screenH);
    srand(time(NULL));

    int nWallD = 8;
    Player pers = {100, 100,116,117, 5, 2, 0, 100, 100, 10, 5, 1};
    Wall dark[nWallD];

    Player enemy = {screenW-200, screenH-200,116,117, 3, 2, 0, 100, 100, 10, 5, 0};


    HDC stelspers = txLoadImage("Stels pers.bmp");

    for (int nomer_steny = 0; nomer_steny < nWallD; nomer_steny++) {

        dark[nomer_steny] = {0,  0, screenW / 10, screenW / 10,txLoadImage("WallDark.bmp")};

        bool stolkn = false;
        int x_st = random (screenW - 100);
        int y_st = random (screenH - 100);

        for (int nomer = 0; nomer < nomer_steny; nomer++)
        {
            if (stolknovenie(x_st,                 y_st,                dark[nomer_steny].length, dark[nomer_steny].height,
                             dark[nomer_steny].x,  dark[nomer_steny].y, dark[nomer_steny].length, dark[nomer_steny].height))
            {
                stolkn = true;
            }
            else if (stolknovenie(x_st,                 y_st,                dark[nomer_steny].length, dark[nomer_steny].height,
                                  pers.x,               pers.y, pers.pdl, pers.pshir))
            {
                stolkn = true;
            }
        }

        while (stolkn)
        {
            stolkn = false;
            x_st = random (screenW - 100);
            y_st = random (screenH - 100);
            for (int nomer = 0; nomer < nomer_steny; nomer++)
            {
                if (stolknovenie(x_st,                 y_st,                dark[nomer_steny].length, dark[nomer_steny].height,
                                 dark[nomer_steny].x,  dark[nomer_steny].y, dark[nomer_steny].length, dark[nomer_steny].height))
                {
                    stolkn = true;
                }
                else if (stolknovenie(x_st,                 y_st,                dark[nomer_steny].length, dark[nomer_steny].height,
                                      pers.x,                    pers.y, pers.pdl, pers.pshir))
                {
                    stolkn = true;
                }
            }

            //cout << nomer_steny << " " << x_st << std::endl;
        }

        dark[nomer_steny].x = x_st;
        dark[nomer_steny].y = y_st;
    }



    while (!GetAsyncKeyState(VK_ESCAPE))
    {
        txSetColor(TX_BLACK);
        txClear();
        txBegin();

        pers.x1 = pers.x;
        pers.y1 = pers.y;

        StelsPerson(&pers, screenW, screenH);

        char health_string[100];
        sprintf(health_string, "Çäîðîâüå %d êîîðäèíàòû %d %d  Ýêðàí %d  %d", pers.hp, pers.x, pers.y, screenW, screenH);
        txTextOut(screenW-500, screenH-100, health_string);

        txTransparentBlt(txDC(), pers.x, pers.y, pers.pdl, pers.pshir, stelspers, pers.pdl * round(pers.frame), pers.pshir * pers.direction, RGB(255 , 255, 255));


        for (int nomer_steny = 0; nomer_steny < nWallD; nomer_steny++) {

            Wall_Push(dark[nomer_steny].x,  dark[nomer_steny].y, dark[nomer_steny].length, dark[nomer_steny].height, &pers, screenW, screenH);
            txTransparentBlt(txDC(), dark[nomer_steny].x, dark[nomer_steny].y, dark[nomer_steny].length, dark[nomer_steny].height, dark[nomer_steny].pic, 0, 0, RGB(255 , 255, 255));
        }

        txEnd();
        txSleep(20);
    }

    txDeleteDC(stelspers);
    for (int nomer_steny = 0; nomer_steny < nWallD; nomer_steny++) {
        txDeleteDC(dark[nomer_steny].pic);
    }

    return 0;
}

